<?php
/**
 * @file
 * Main file for the Yandex.Share with Counters module.
 */

// Include field hooks.
require_once __DIR__ . '/yashare_counters.fields.inc';

define('YASHARE_COUNTERS_SMALL', 1);

/**
 * Implements hook_menu().
 */
function yashare_counters_menu() {
  $items = array();
  $items['admin/config/services/yashare_counters'] = array(
    'title' => 'Yandex.Share with Counters',
    'description' => 'Adjust Yandex.Share buttons options',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('yashare_counters_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'yashare_counters.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_block_info().
 */
function yashare_counters_block_info() {
  $blocks['yashare_counters'] = array(
    'info' => t('Yandex.Share with Counters'),
    'cache' => DRUPAL_NO_CACHE,
    'status' => FALSE,
    'weight' => 10,
  );
  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function yashare_counters_block_configure($delta = '') {
  $form = array();
  switch ($delta) {
    case 'yashare_counters':
      $form['fixed_url'] = array(
        '#type' => 'textfield',
        '#title' => t('Use fixed URL for buttons on all pages'),
        '#description' => t('Leave blank for relative URL. &lt;front&gt; is the front page.'),
        '#default_value' => variable_get('yashare_counters_fixed_url'),
      );
      break;
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function yashare_counters_block_save($delta = '', $edit = array()) {
  switch ($delta) {
    case 'yashare_counters':
      variable_set('yashare_counters_fixed_url', $edit['fixed_url']);
      break;
  }
}

/**
 * Implements hook_block_view().
 */
function yashare_counters_block_view($delta = '') {
  $block = array();

  $link = variable_get('yashare_counters_fixed_url');
  $title = NULL;
  $description = NULL;
  $image = NULL;

  if ($delta == 'yashare_counters') {
    $block['subject'] = t('Share');
    $block['content'] = array(
      '#markup' => yashare_counters_block_content($link, $title, $description, $image),
      '#attached' => array(
        'js' => array(
          'https://yastatic.net/share2/share.js' => array(
            'type' => 'external',
            // See https://www.drupal.org/node/1664602.
            'async' => 'async',
          ),
        ),
      ),
    );
  }
  return $block;
}

/**
 * Generates block content.
 */
function yashare_counters_block_content($link = NULL, $title = NULL, $description = NULL, $image = NULL) {
  global $language_content;
  $lang = $language_content->language;

  $block_content = '<div class="ya-share2"';
  $block_content .= ' data-lang="' . $lang . '"';

  if ($link) {
    $block_content .= ' data-url="' . url(drupal_get_path_alias($link), array('absolute' => TRUE)) . '"';
  }
  if ($title) {
    $block_content .= ' data-title="' . check_plain($title) . '"';
  }
  if ($description) {
    $block_content .= ' data-description="' . check_plain($description) . '"';
  }
  if ($image) {
    $block_content .= ' data-image="' . $image . '"';
  }

  $service_list = ' data-services="';
  foreach (yashare_counters_services_list() as $service_id => $service_name) {
    if (variable_get('yashare_counters_service_' . $service_id . '_enabled', 1)) {
      $service_list .= $service_id . ',';
    }
  }
  $service_list .= '"';
  $block_content .= $service_list;

  if (variable_get('yashare_counters_small_size', YASHARE_COUNTERS_SMALL)) {
    $block_content .= ' data-size="s"';
  }
  $block_content .= ' data-counter /></div>';
  return $block_content;
}

/**
 * Implements hook_theme().
 */
function yashare_counters_theme() {
  return array(
    'yashare_counters_admin_settings_services_table' => array(
      'file' => 'yashare_counters.admin.inc',
      'render element' => 'form',
    ),
  );
}

/**
 * Internal function.
 */
function yashare_counters_services_list() {
  $services = &drupal_static(__FUNCTION__, NULL);

  if (!isset($services)) {
    $raw_services = array(
      // Core providers.
      'vkontakte' => t('Vkontakte'),
      'facebook' => t('Facebook'),
      'twitter' => t('Twitter'),
      'odnoklassniki' => t('Odnoklassniki'),
      'moimir' => t('Moi mir'),
      'gplus' => t('Google Plus'),
    );

    $services = array();
    $weights = array();

    foreach ($raw_services as $service_id => $service_name) {
      $weights[$service_id] = variable_get('yashare_counters_service_' . $service_id . '_weight', 0);
    }
    asort($weights);

    foreach ($weights as $service_id => $weight) {
      $services[$service_id] = $raw_services[$service_id];
    }
  }

  return $services;
}
